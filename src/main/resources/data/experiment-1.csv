"ID","Type","Description","Commit","Size/Commit","Others"
"17","Extract Method","Extract Method private addEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set<String>) : void extracted from public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void in class org.springframework.boot.orm.jpa.EntityScanRegistrar","https://github.com/spring-projects/spring-boot/commit/1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2","2","Extract Method private addEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set<String>) : void extracted from public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void in class org.springframework.boot.orm.jpa.EntityScanRegistrar
Change Return Type String[] to Set<String> in method private getPackagesToScan(metadata AnnotationMetadata) : Set<String> in class org.springframework.boot.orm.jpa.EntityScanRegistrar"
"45","Extract Method","Extract Method private doAppendNode(node SNode) : void extracted from public appendNode(node SNode) : void in class jetbrains.mps.text.impl.TextGenSupport","https://github.com/JetBrains/MPS/commit/797fb7fc1415ac0ebe9a8262677dfa4462ed6cb4","3","Extract Method private doAppendNode(node SNode) : void extracted from public appendNode(node SNode) : void in class jetbrains.mps.text.impl.TextGenSupport
Rename Attribute stringSwitchCases_1htk8d_a0a0jb : String[] to stringSwitchCases_1htk8d_a0a0kb : String[] in class jetbrains.mps.lang.textGen.structure.StructureAspectDescriptor
Add Parameter Annotation @Nullable in parameter node : SNode in method public appendNode(node SNode) : void from class jetbrains.mps.text.impl.TextGenSupport"
"73","Extract Method","Extract Method private standaloneCollect(cli CLI, protocol String, host String, port int) : void extracted from public main(args String[]) : void in class org.jboss.as.jdr.CommandLineMain","https://github.com/wildfly/wildfly/commit/c0f8a7f2b4341601df63c5470f41f157dbd83781","4","Extract Method private standaloneCollect(cli CLI, protocol String, host String, port int) : void extracted from public main(args String[]) : void in class org.jboss.as.jdr.CommandLineMain
Change Parameter Type port : String to port : int in method public JdrRunner(cli CLI, protocol String, host String, port int, user String, pass String) in class org.jboss.as.jdr.JdrRunner
Add Method Annotation @Override in method public collect() : JdrReport from class org.jboss.as.jdr.JdrRunner
Add Parameter cli : CLI in method public JdrRunner(cli CLI, protocol String, host String, port int, user String, pass String) from class org.jboss.as.jdr.JdrRunner"
"141","Extract Method","Extract Method private closeOpenStatements() : void extracted from public close() : void in class com.zaxxer.hikari.proxy.ConnectionProxy","https://github.com/brettwooldridge/HikariCP/commit/e19c6874431dc2c3046436c2ac249a0ab2ef3457","2","Extract Method private closeOpenStatements() : void extracted from public close() : void in class com.zaxxer.hikari.proxy.ConnectionProxy
Extract Variable statement : Statement in method private closeOpenStatements() : void from class com.zaxxer.hikari.proxy.ConnectionProxy"
"157","Move Attribute","Move Attribute public BUTTON_TEXTURES : ResourceLocation from class buildcraft.core.lib.gui.buttons.GuiBetterButton to public BUTTON_TEXTURES : ResourceLocation from class buildcraft.core.lib.gui.buttons.StandardButtonTextureSets","https://github.com/BuildCraft/BuildCraft/commit/6abc40ed4850d74ee6c155f5a28f8b34881a0284","4","Extract Method private initTemplate() : void extracted from public initialize() : void in class buildcraft.builders.TileFiller
Extract Method private initTemplate() : void extracted from public updateEntity() : void in class buildcraft.builders.TileFiller
Change Return Type void to GuiBetterButton in method public setToolTip(tips ToolTip) : GuiBetterButton in class buildcraft.core.lib.gui.buttons.GuiBetterButton
Move Attribute public BUTTON_TEXTURES : ResourceLocation from class buildcraft.core.lib.gui.buttons.GuiBetterButton to public BUTTON_TEXTURES : ResourceLocation from class buildcraft.core.lib.gui.buttons.StandardButtonTextureSets"
"158","Move Attribute","Move Attribute private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.http.DefaultHandler","https://github.com/rackerlabs/blueflood/commit/c76e6e1f27a6697b3b88ad4ed710441b801afb3b","2","Move Method public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.http.DefaultHandler
Move Attribute private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.http.DefaultHandler"
"160","Move Attribute","Move Attribute public m_framework : Framework from class org.voltdb.importer.ImportProcessor.BundleWrapper to private m_framework : Framework from class org.voltdb.importer.ImportProcessor","https://github.com/VoltDB/voltdb/commit/a896b8bf8f7067e41291eb7771deed76b3621fa0","3","Move Attribute public m_framework : Framework from class org.voltdb.importer.ImportProcessor.BundleWrapper to private m_framework : Framework from class org.voltdb.importer.ImportProcessor
Inline Variable o : Object in method public addProcessorConfig(properties Properties) : void from class org.voltdb.importer.ImportProcessor
Remove Parameter framework : Framework in method public BundleWrapper(bundle Bundle, framework Framework, handler ImportHandlerProxy, properties Properties) from class org.voltdb.importer.ImportProcessor.BundleWrapper"
"161","Move Attribute","Move Attribute public VIDMINKY_MAP : Map<String,String> from class org.languagetool.tagging.uk.UkrainianTagger to public VIDMINKY_MAP : Map<String,String> from class org.languagetool.tagging.uk.PosTagHelper","https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec","4","Move Attribute public VIDMINKY_MAP : Map<String,String> from class org.languagetool.tagging.uk.UkrainianTagger to public VIDMINKY_MAP : Map<String,String> from class org.languagetool.tagging.uk.PosTagHelper
Rename Method private hasRequiredPosTag(posTagsToFind Collection<String>, tokenReadings AnalyzedTokenReadings) : boolean renamed to private getReadingWithVidmPosTag(posTagsToFind Collection<String>, tokenReadings AnalyzedTokenReadings) : boolean in class org.languagetool.rules.uk.TokenAgreementRule
Extract Class org.languagetool.tagging.uk.CompoundTagger from class org.languagetool.tagging.uk.UkrainianTagger
Extract Method private doGuessCompoundTag(word String) : List<AnalyzedToken> extracted from private guessCompoundTag(word String) : List<AnalyzedToken> in class org.languagetool.tagging.uk.CompoundTagger"
"180","Move Class","Move Class tconstruct.library.modifiers.RecipeMatch moved to tconstruct.library.mantle.RecipeMatch","https://github.com/SlimeKnights/TinkersConstruct/commit/71820e573134be3fad3935035249cd77c4412f4e","4","Move Class tconstruct.library.modifiers.RecipeMatch moved to tconstruct.library.mantle.RecipeMatch
Move Method public addItem(oredictItem String, count int) : void from class tconstruct.library.modifiers.Modifier to public addItem(oredictItem String, amountNeeded int, amountMatched int) : void from class tconstruct.library.mantle.RecipeMatchRegistry
Rename Parameter count : int to amountNeeded : int in method public addItem(oredictItem String, amountNeeded int, amountMatched int) : void in class tconstruct.library.mantle.RecipeMatchRegistry
Change Attribute Type modifierItems : List<RecipeMatch> to modifierItems : RecipeMatchRegistry in class tconstruct.library.modifiers.Modifier"
"181","Move Class","Move Class org.springframework.aop.interceptor.AsyncExecutionInterceptor.CompletableFutureDelegate moved to org.springframework.aop.interceptor.AsyncExecutionAspectSupport.CompletableFutureDelegate","https://github.com/spring-projects/spring-framework/commit/dd4bc630c3de70204081ab196945d6b55ab03beb","3","Pull Up Attribute private completableFuturePresent : boolean from class org.springframework.aop.interceptor.AsyncExecutionInterceptor to private completableFuturePresent : boolean from class org.springframework.aop.interceptor.AsyncExecutionAspectSupport
Move Class org.springframework.aop.interceptor.AsyncExecutionInterceptor.CompletableFutureDelegate moved to org.springframework.aop.interceptor.AsyncExecutionAspectSupport.CompletableFutureDelegate
Extract And Move Method protected doSubmit(task Callable<Object>, executor AsyncTaskExecutor, returnType Class<?>) : Object extracted from public invoke(invocation MethodInvocation) : Object in class org.springframework.aop.interceptor.AsyncExecutionInterceptor & moved to class org.springframework.aop.interceptor.AsyncExecutionAspectSupport"
"190","Move Class","Move Class cgeo.geocaching.connector.TerraCachingConnector moved to cgeo.geocaching.connector.tc.TerraCachingConnector","https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160","2","Move Class cgeo.geocaching.connector.TerraCachingConnector moved to cgeo.geocaching.connector.tc.TerraCachingConnector
Add Method Annotation @SuppressWarnings(""static-method"") in method protected afterParsing(cache Geocache) : void from class cgeo.geocaching.files.GPXParser"
"198","Move Class","Move Class com.google.devtools.j2objc.translate.LambdaExpressionTest moved to com.google.devtools.j2objc.ast.LambdaExpressionTest","https://github.com/google/j2objc/commit/d05d92de40542e85f9f26712d976e710be82914e","5","Move Class com.google.devtools.j2objc.translate.LambdaExpressionTest moved to com.google.devtools.j2objc.ast.LambdaExpressionTest
Extract Method public printLambdaCall(functionalInterface IMethodBinding, functionalTypeBinding ITypeBinding, methodBinding IMethodBinding, parameters List<VariableDeclaration>, isCapturing boolean) : void extracted from public visit(node LambdaExpression) : boolean in class com.google.devtools.j2objc.gen.StatementGenerator
Extract Method public printLambdaCallWithoutBlocks(functionalInterface IMethodBinding, functionalClassName String, newClassName String, methodBinding IMethodBinding, isCapturing boolean) : void extracted from public visit(node LambdaExpression) : boolean in class com.google.devtools.j2objc.gen.StatementGenerator
Extract Method public printLambdaCallBlocks(functionalInterface IMethodBinding, parameters List<VariableDeclaration>, isCapturing boolean) : void extracted from public visit(node LambdaExpression) : boolean in class com.google.devtools.j2objc.gen.StatementGenerator
Split Parameter node : LambdaExpression to [isCapturing : boolean, parameters : List<VariableDeclaration>] in method public printLambdaCallBlocks(functionalInterface IMethodBinding, parameters List<VariableDeclaration>, isCapturing boolean) : void in class com.google.devtools.j2objc.gen.StatementGenerator"
"205","Rename Variable","Rename Variable publishAndCheck : Runnable to asynchronousPublication : Runnable in method public testExceptionInHandlerInvocation() : void in class net.engio.mbassy.SyncAsyncTest","https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac","4","Rename Class net.engio.mbassy.ConditionalHandlers renamed to net.engio.mbassy.ConditionalHandlerTest
Rename Variable publishAndCheck : Runnable to asynchronousPublication : Runnable in method public testExceptionInHandlerInvocation() : void in class net.engio.mbassy.SyncAsyncTest
Rename Attribute PublicationError : String to PublicationErrorHandlers : String in class net.engio.mbassy.bus.common.Properties.Handler
Change Parameter Type message : StandardMessage to message : Object in method public handle(message Object) : void in class net.engio.mbassy.listeners.ExceptionThrowingListener"
"207","Rename Variable","Rename Variable augmentor : JpaSoftDeleteQueryAugmentor to jpaAugmentor : JpaSoftDeleteQueryAugmentor in method public setUp() : void in class org.springframework.data.jpa.repository.support.SoftDeleteIntegrationTests","https://github.com/spring-projects/spring-data-jpa/commit/36d1b0717bc5836bba39985caadc2df5f2533ac4","4","Move Class org.springframework.data.jpa.repository.augment.JpaSoftDeleteQueryAugmentor.PropertyChangeEnsuringBeanWrapper moved to org.springframework.data.jpa.repository.augment.PropertyChangeEnsuringBeanWrapper
Rename Variable augmentor : JpaSoftDeleteQueryAugmentor to jpaAugmentor : JpaSoftDeleteQueryAugmentor in method public setUp() : void in class org.springframework.data.jpa.repository.support.SoftDeleteIntegrationTests
Remove Method Annotation @SuppressWarnings(""unchecked"") in method public withQuery(query String) : JpaQueryContext from class org.springframework.data.jpa.repository.support.JpaQueryContext
Reorder Parameter [queryMode : QueryMode, entityManager : EntityManager, query : Query] to [query : Query, queryMode : QueryMode, entityManager : EntityManager] in method public JpaQueryContext(query Query, queryMode QueryMode, entityManager EntityManager) in class org.springframework.data.jpa.repository.support.JpaQueryContext"
"211","Rename Variable","Rename Variable clazz : Class<? extends PersistentObject> to persistentObjectClass : Class<? extends PersistentObject> in method protected flushInserts() : void in class org.activiti.engine.impl.db.DbSqlSession","https://github.com/Activiti/Activiti/commit/a70ca1d9ad2ea07b19c5e1f9540c809d7a12d3fb","3","Extract Method protected flushPersistentObjects(persistentObjectClass Class<? extends PersistentObject>, persistentObjectsToInsert List<PersistentObject>) : void extracted from protected flushInserts() : void in class org.activiti.engine.impl.db.DbSqlSession
Rename Variable clazz : Class<? extends PersistentObject> to persistentObjectClass : Class<? extends PersistentObject> in method protected flushInserts() : void in class org.activiti.engine.impl.db.DbSqlSession
Parameterize Variable clazz : Class<? extends PersistentObject> to persistentObjectClass : Class<? extends PersistentObject> in method protected flushPersistentObjects(persistentObjectClass Class<? extends PersistentObject>, persistentObjectsToInsert List<PersistentObject>) : void in class org.activiti.engine.impl.db.DbSqlSession"
"214","Rename Variable","Rename Variable i : int to attempts : int in method public getOffsetCoordinator() : void in class org.voltdb.importclient.kafka.KafkaStreamImporter.TopicPartitionFetcher","https://github.com/VoltDB/voltdb/commit/cfc54e8afa7ee7d5376525a84559e90b21487ccf","4","Extract Method private resetLeader() : void extracted from public run() : void in class org.voltdb.importclient.kafka.KafkaStreamImporter.TopicPartitionFetcher
Rename Variable i : int to attempts : int in method public getOffsetCoordinator() : void in class org.voltdb.importclient.kafka.KafkaStreamImporter.TopicPartitionFetcher
Replace Variable With Attribute consumer : SimpleConsumer to m_consumer : SimpleConsumer in method public run() : void in class org.voltdb.importclient.kafka.KafkaStreamImporter.TopicPartitionFetcher
Replace Variable With Attribute consumer : SimpleConsumer to m_consumer : SimpleConsumer in method private resetLeader() : void in class org.voltdb.importclient.kafka.KafkaStreamImporter.TopicPartitionFetcher"
