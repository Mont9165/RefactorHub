{"type":"Extract Method","commit":{"sha":"6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb","owner":"realm","repository":"realm-java"},"data":{"before":{},"after":{}},"description":"Extract Method private showStatus(txt String) : void extracted from private showStatus(realm Realm) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity"}
{"type":"Extract Method","commit":{"sha":"cb49e436b9d7ee55f2531ebc2ef1863f5c9ba9fe","owner":"rstudio","repository":"rstudio"},"data":{"before":{},"after":{}},"description":"Extract Method protected setMaxHeight(maxHeight int) : void extracted from protected wrapMenuBar(menuBar ToolbarMenuBar) : Widget in class org.rstudio.core.client.widget.ScrollableToolbarPopupMenu"}
{"type":"Extract Method","commit":{"sha":"7ed3f273ab0caf0337c22f0b721d51829bb0c877","owner":"JetBrains","repository":"intellij-community"},"data":{"before":{},"after":{}},"description":"Extract Method private addCoursesFromStepic(result List<CourseInfo>, pageNumber int) : boolean extracted from public getCourses() : List<CourseInfo> in class com.jetbrains.edu.stepic.EduStepicConnector"}
{"type":"Extract Method","commit":{"sha":"2801269c7e47bd6e243612654a74cee809d20959","owner":"crashub","repository":"crash"},"data":{"before":{},"after":{}},"description":"Extract Method private convertPemKeyPair(pemKeyPair PEMKeyPair) : KeyPair extracted from public loadKeys() : Iterable<KeyPair> in class org.crsh.auth.FilePublicKeyProvider"}
{"type":"Extract Method","commit":{"sha":"722ef9156896248ef3fbe83adde0f6ff8f46856a","owner":"oblac","repository":"jodd"},"data":{"before":{},"after":{}},"description":"Extract Method protected resolveFormEncoding() : String extracted from protected formBuffer() : Buffer in class jodd.http.HttpBase"}
{"type":"Move Attribute","commit":{"sha":"6abc40ed4850d74ee6c155f5a28f8b34881a0284","owner":"BuildCraft","repository":"BuildCraft"},"data":{"before":{},"after":{}},"description":"Move Attribute public BUTTON_TEXTURES : ResourceLocation from class buildcraft.core.lib.gui.buttons.GuiBetterButton to public BUTTON_TEXTURES : ResourceLocation from class buildcraft.core.lib.gui.buttons.StandardButtonTextureSets"}
{"type":"Move Attribute","commit":{"sha":"c76e6e1f27a6697b3b88ad4ed710441b801afb3b","owner":"rackerlabs","repository":"blueflood"},"data":{"before":{},"after":{}},"description":"Move Attribute private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.http.DefaultHandler"}
{"type":"Move Attribute","commit":{"sha":"13b63c194b010201c439932ece2f1bc628ebf287","owner":"eclipse","repository":"jetty.project"},"data":{"before":{},"after":{}},"description":"Move Attribute private __propertyPattern : Pattern from class org.eclipse.jetty.xml.XmlConfiguration to class org.eclipse.jetty.start.Props"}
{"type":"Move Attribute","commit":{"sha":"a896b8bf8f7067e41291eb7771deed76b3621fa0","owner":"VoltDB","repository":"voltdb"},"data":{"before":{},"after":{}},"description":"Move Attribute public m_framework : Framework from class org.voltdb.importer.ImportProcessor.BundleWrapper to private m_framework : Framework from class org.voltdb.importer.ImportProcessor"}
{"type":"Move Attribute","commit":{"sha":"bec15926deb49d2b3f7b979d4cfc819947a434ec","owner":"languagetool-org","repository":"languagetool"},"data":{"before":{},"after":{}},"description":"Move Attribute public VIDMINKY_MAP : Map<String,String> from class org.languagetool.tagging.uk.UkrainianTagger to public VIDMINKY_MAP : Map<String,String> from class org.languagetool.tagging.uk.PosTagHelper"}
{"type":"Move Class","commit":{"sha":"3972b9b3d4e03bdb5e62dfa663e3e0a1871e3c9f","owner":"JetBrains","repository":"intellij-community"},"data":{"before":{},"after":{}},"description":"Move Class com.intellij.psi.codeStyle.autodetect.NewLineBlocksIterator moved to com.intellij.psi.formatter.common.NewLineBlocksIterator"}
{"type":"Move Class","commit":{"sha":"5f18bed8da4dda4fa516907ecbbe28f712e944f7","owner":"JetBrains","repository":"intellij-community"},"data":{"before":{},"after":{}},"description":"Move Class com.intellij.util.ui.components.JBPanel moved to com.intellij.ui.components.JBPanel"}
{"type":"Move Class","commit":{"sha":"7c26ac669a4e17ca1d2319a5049a56424fd33104","owner":"hierynomus","repository":"sshj"},"data":{"before":{},"after":{}},"description":"Move Class nl.javadude.sshj.connection.channel.ChannelCloseEofTest moved to com.hierynomus.sshj.connection.channel.ChannelCloseEofTest"}
{"type":"Move Class","commit":{"sha":"e66e49cd4a9dd8027204f712f780170a5c129f5b","owner":"hazelcast","repository":"hazelcast"},"data":{"before":{},"after":{}},"description":"Move Class com.hazelcast.spi.ServiceInfo moved to com.hazelcast.spi.impl.servicemanager.ServiceInfo"}
{"type":"Move Class","commit":{"sha":"71820e573134be3fad3935035249cd77c4412f4e","owner":"SlimeKnights","repository":"TinkersConstruct"},"data":{"before":{},"after":{}},"description":"Move Class tconstruct.library.modifiers.RecipeMatch moved to tconstruct.library.mantle.RecipeMatch"}
{"type":"Move Method","commit":{"sha":"c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa","owner":"SonarSource","repository":"sonarqube"},"data":{"before":{},"after":{}},"description":"Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent"}
{"type":"Move Method","commit":{"sha":"59fd9e696cec5f2ed44c27422bbc426b11647321","owner":"liferay","repository":"liferay-portal"},"data":{"before":{},"after":{}},"description":"Move Method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String) : Dependency from class com.liferay.gradle.plugins.poshi.runner.util.GradleUtil to public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency from class com.liferay.gradle.util.GradleUtil"}
{"type":"Move Method","commit":{"sha":"7668c875dfa7240b1ec08eb60b42107bae1b4cd3","owner":"SonarSource","repository":"sonarqube"},"data":{"before":{},"after":{}},"description":"Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent"}
{"type":"Move Method","commit":{"sha":"c928852d4ab7d8c744063979208709ed4429b8e9","owner":"elastic","repository":"elasticsearch"},"data":{"before":{},"after":{}},"description":"Move Method public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryParser to public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryBuilder"}
{"type":"Move Method","commit":{"sha":"e4de9513d0a06d381b4521211cf688b77379c39d","owner":"restlet","repository":"restlet-framework-java"},"data":{"before":{},"after":{}},"description":"Move Method private computeSectionName(apiDeclarationPath String) : String from class org.restlet.ext.apispark.internal.conversion.swagger.v1_2.SwaggerReader to public computeSectionName(apiDeclarationPath String) : String from class org.restlet.ext.apispark.internal.conversion.swagger.v1_2.SwaggerUtils"}
{"type":"Rename Method","commit":{"sha":"c928852d4ab7d8c744063979208709ed4429b8e9","owner":"elastic","repository":"elasticsearch"},"data":{"before":{},"after":{}},"description":"Rename Method public parse(parseContext QueryParseContext) : Query renamed to public fromXContent(parseContext QueryParseContext) : QueryBuilder in class org.elasticsearch.index.query.ExistsQueryParser"}
{"type":"Rename Method","commit":{"sha":"851ab757698304e9d8d4ae24ab75be619ddae31a","owner":"GoClipse","repository":"goclipse"},"data":{"before":{},"after":{}},"description":"Rename Method public getInvocationOffest() : int renamed to public getInvocationOffset() : int in class melnorme.lang.ide.ui.editor.actions.AbstractOpenElementOperation"}
{"type":"Rename Method","commit":{"sha":"7a1659c12d76b510809dea1dea1f5100bcf4cd60","owner":"apache","repository":"pig"},"data":{"before":{},"after":{}},"description":"Rename Method private startSparkJob() : void renamed to private addFilesToSparkJob() : void in class org.apache.pig.backend.hadoop.executionengine.spark.SparkLauncher"}
{"type":"Rename Method","commit":{"sha":"a9ca2efae56815dc464189b055ffe9da23766f7f","owner":"antlr","repository":"antlr4"},"data":{"before":{},"after":{}},"description":"Rename Method public testInterp(lg LexerGrammar, g Grammar, startRule String, input String, decision int, expectedAmbigAlts String, overallTree String, expectedParseTrees String[]) : void renamed to public testAmbiguousTrees(lg LexerGrammar, g Grammar, startRule String, input String, decision int, expectedAmbigAlts String, overallTree String, expectedParseTrees String[]) : void in class org.antlr.v4.test.tool.TestAmbigParseTrees"}
{"type":"Rename Method","commit":{"sha":"bec15926deb49d2b3f7b979d4cfc819947a434ec","owner":"languagetool-org","repository":"languagetool"},"data":{"before":{},"after":{}},"description":"Rename Method private hasRequiredPosTag(posTagsToFind Collection<String>, tokenReadings AnalyzedTokenReadings) : boolean renamed to private getReadingWithVidmPosTag(posTagsToFind Collection<String>, tokenReadings AnalyzedTokenReadings) : boolean in class org.languagetool.rules.uk.TokenAgreementRule"}
{"type":"Rename Parameter","commit":{"sha":"484038e916dc40bf87eca10c77889d79eca96c4d","owner":"JetBrains","repository":"intellij-community"},"data":{"before":{},"after":{}},"description":"Rename Parameter parent : TreePath to path : TreePath in method public removeNode(path TreePath) : void in class com.intellij.util.ui.EditableTreeModel"}
{"type":"Rename Parameter","commit":{"sha":"6d10621465c0e6ae81ad8d240d70a55c72caeea6","owner":"Alluxio","repository":"alluxio"},"data":{"before":{},"after":{}},"description":"Rename Parameter blockSize : long to initialBlockSize : long in method public TempBlockMeta(userId long, blockId long, initialBlockSize long, dir StorageDir) in class tachyon.worker.block.meta.TempBlockMeta"}
{"type":"Rename Parameter","commit":{"sha":"457a7f637ddb226acf477cae0b04c8ff16ec9a50","owner":"Netflix","repository":"eureka"},"data":{"before":{},"after":{}},"description":"Rename Parameter myInfo : InstanceInfo to applicationInfoManager : ApplicationInfoManager in method package DiscoveryClient(applicationInfoManager ApplicationInfoManager, config EurekaClientConfig, args DiscoveryClientOptionalArgs, backupRegistryProvider Provider<BackupRegistry>) in class com.netflix.discovery.DiscoveryClient"}
{"type":"Rename Parameter","commit":{"sha":"71820e573134be3fad3935035249cd77c4412f4e","owner":"SlimeKnights","repository":"TinkersConstruct"},"data":{"before":{},"after":{}},"description":"Rename Parameter count : int to amountNeeded : int in method public addItem(oredictItem String, amountNeeded int, amountMatched int) : void in class tconstruct.library.mantle.RecipeMatchRegistry"}
{"type":"Rename Parameter","commit":{"sha":"37d842bfed9779e662321a5ee43c36b058386843","owner":"wildfly","repository":"wildfly"},"data":{"before":{},"after":{}},"description":"Rename Parameter managementClient : ManagementClient to client : ModelControllerClient in method public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void in class org.jboss.as.test.shared.ServerReload"}
{"type":"Extract Variable","commit":{"sha":"6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb","owner":"realm","repository":"realm-java"},"data":{"before":{},"after":{}},"description":"Extract Variable realmMigration : RealmMigration in method public migrateRealm(configuration RealmConfiguration, migration RealmMigration) : void from class io.realm.Realm"}
{"type":"Extract Variable","commit":{"sha":"7ed3f273ab0caf0337c22f0b721d51829bb0c877","owner":"JetBrains","repository":"intellij-community"},"data":{"before":{},"after":{}},"description":"Extract Variable coursesContainer : CoursesContainer in method private addCoursesFromStepic(result List<CourseInfo>, pageNumber int) : boolean from class com.jetbrains.edu.stepic.EduStepicConnector"}
{"type":"Extract Variable","commit":{"sha":"20d39f7af2165c67d5221f556f58820c992d2cc6","owner":"spring-projects","repository":"spring-boot"},"data":{"before":{},"after":{}},"description":"Extract Variable itemKey : String in method private flatten(properties Properties, input Map<String,Object>, path String) : void from class org.springframework.boot.cloudfoundry.VcapApplicationListener"}
{"type":"Extract Variable","commit":{"sha":"e3b0d87b3ca0fd27cec39937cb3dc3a05b0cfc4e","owner":"infinispan","repository":"infinispan"},"data":{"before":{},"after":{}},"description":"Extract Variable cacheTopology : CacheTopology in method protected waitForCacheToStabilize(cache Cache<Object,Object>, cacheConfig Configuration) : void from class org.infinispan.commands.CreateCacheCommand"}
{"type":"Extract Variable","commit":{"sha":"9a3fa887cfa03c082f249d1d4003d87c14ba5d24","owner":"apache","repository":"cassandra"},"data":{"before":{},"after":{}},"description":"Extract Variable addr : InetAddress in method private generateFakeEndpoints(tmd TokenMetadata, numOldNodes int, numVNodes int) : void from class org.apache.cassandra.dht.BootStrapperTest"}
{"type":"Change Return Type","commit":{"sha":"c928852d4ab7d8c744063979208709ed4429b8e9","owner":"elastic","repository":"elasticsearch"},"data":{"before":{},"after":{}},"description":"Change Return Type Query to QueryBuilder in method public fromXContent(parseContext QueryParseContext) : QueryBuilder in class org.elasticsearch.index.query.ExistsQueryParser"}
{"type":"Change Return Type","commit":{"sha":"1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2","owner":"spring-projects","repository":"spring-boot"},"data":{"before":{},"after":{}},"description":"Change Return Type String[] to Set<String> in method private getPackagesToScan(metadata AnnotationMetadata) : Set<String> in class org.springframework.boot.orm.jpa.EntityScanRegistrar"}
{"type":"Change Return Type","commit":{"sha":"6abc40ed4850d74ee6c155f5a28f8b34881a0284","owner":"BuildCraft","repository":"BuildCraft"},"data":{"before":{},"after":{}},"description":"Change Return Type void to GuiBetterButton in method public setToolTip(tips ToolTip) : GuiBetterButton in class buildcraft.core.lib.gui.buttons.GuiBetterButton"}
{"type":"Change Return Type","commit":{"sha":"563d281b61e9f8748858e911eaa810e981f1e953","owner":"crate","repository":"crate"},"data":{"before":{},"after":{}},"description":"Change Return Type String to Function in method private rewriteAndValidateFields(function Function, context Context) : Function in class io.crate.lucene.LuceneQueryBuilder.Visitor"}
{"type":"Change Return Type","commit":{"sha":"8a16081a9322b4a4062baaf32edc6b6b8b4afa88","owner":"netty","repository":"netty"},"data":{"before":{},"after":{}},"description":"Change Return Type ByteBuf to ByteString in method public debugData() : ByteString in class io.netty.handler.codec.http2.StreamBufferingEncoder.Http2GoAwayException"}
{"type":"Change Variable Type","commit":{"sha":"c22d40fab8dfe4c5cad9ba582caf0855ff64b324","owner":"puniverse","repository":"quasar"},"data":{"before":{},"after":{}},"description":"Change Variable Type e : Exception to t : Throwable in method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher"}
{"type":"Change Variable Type","commit":{"sha":"c928852d4ab7d8c744063979208709ed4429b8e9","owner":"elastic","repository":"elasticsearch"},"data":{"before":{},"after":{}},"description":"Change Variable Type deserializedQuery : QB to deserializedQuery : QueryBuilder in method public testSerialization() : void in class org.elasticsearch.index.query.BaseQueryTestCase"}
{"type":"Change Variable Type","commit":{"sha":"f1533756133dec84ce8218202585ac85904da7c9","owner":"belaban","repository":"JGroups"},"data":{"before":{},"after":{}},"description":"Change Variable Type member : String to addr : InetSocketAddress in method public isInMembersList(sender IpAddress) : boolean in class org.jgroups.auth.FixedMembershipToken"}
{"type":"Change Variable Type","commit":{"sha":"247232bdde24b81814a82100743f77d881aaf06b","owner":"spring-projects","repository":"spring-integration"},"data":{"before":{},"after":{}},"description":"Change Variable Type bis : BufferedInputStream to sourceFileInputStream : InputStream in method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File in class org.springframework.integration.file.FileWritingMessageHandler"}
{"type":"Change Variable Type","commit":{"sha":"e083683f4fe9206609201bb39a60bbd8ee0c8a0f","owner":"spring-projects","repository":"spring-framework"},"data":{"before":{},"after":{}},"description":"Change Variable Type hm : SimpleUrlHandlerMapping to hm : WebSocketHandlerMapping in method public getHandlerMapping() : AbstractHandlerMapping in class org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistry"}
